@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

SHOW_PERSON_PORTRAIT()
LAYOUT_LEFT_RIGHT()

AddRelTag("async", $lineStyle = DashedLine())

Person(seller, "Funcionário vendedor", "Funcionado responsável pelo setor de vendas.")
Person(finalClient, "Cliente da loja", "Cliente que realiza compra na loja.")
Person(manager, "Funcionário Gerente", "Funcionario responsável pelo setor de gerencia da loja.")

System(management, "Sistema Web de gerenciamento de entregas de pedido", "Aplicação Web para o gerenciamento de pedidos para entregas. Permite os funcinarios interagem com os pedidos para entrega atraves de cadastro, atualizações e detalhamento dos pedidos para entrega")

System_Boundary(aws, "Sistema Backend AWS") {
    Container(gateway, "Backend REST API", "Gateway API", "Responsavel por receber requisições do sistema, direciona-lás e responder corretamente a aplicação web" )
    Container(events, "Event Brigde", "Event Bus", "Responsável por receber receber eventos e direciona-los para a lambda correta.")
    Container(notification, "Função Notificação","Aws Lambda", "Função responsavel por notificar cliente através de um número de whatsapp")
    Container(cad, "Função Casdastro", "Aws Lambda", "Função responsável por receber um payload de pedido de entrega e envia-lo parao o banco de dados e gerar um evento de notificação de criação.")
    ContainerDb(db, "Banco de dados", "DynamoDB", "Contém informações sobre o pedido e entrega.")
}

Rel(seller, management, "Insere pedido para entrega", "via interface do sistema")

Rel(management, gateway, "Envia pedido para cadastro", "HTTP/JSON", $tags = "async")

Rel(gateway, events, "Envia evento de cadastro de pedido", "HTTP/JSON através de source event", $tags = "async")

Rel(events, cad, "Envia pedido para cadastrar", "atráves de event rule para lambda", $tags = "async")
Rel(cad, db, "Salva pedido de entrega", $tags = "async")

Rel(cad, gateway, "Envia pedido para notifição de criação", "HTTP/JSON através de source event", $tags = "async")
Rel(gateway, events, "Envia evento de notificação de pedido", "HTTP/JSON através de source event", $tags = "async")
Rel(events, notification, "Envia status do pedido para ser notificado", "atraves de event rule para lambda", $tags = "async")
Rel(notification, finalClient, "Envia notificação de pedido para entrega criado", "atraves de whatsapp", $tags = "async")
Rel(notification, manager, "Envia notificação de pedido aguardando aprovacao", "atraves de whatsapp", $tags = "async")


@enduml